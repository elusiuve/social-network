{"version":3,"sources":["components/hoc/withAuthRedirect.js","assets/images/user.png","components/Users/Users.module.css","components/Users/Users.js","components/Users/UsersAPIComponent.js","components/Users/UsersContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","Users","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","map","p","className","currentPage","s","selectedPage","onClick","onPageChanged","users","u","key","id","avatar","src","photos","small","userPhoto","subscriptions","followed","disabled","followingInProgress","some","unfollowSucces","followSucces","name","status","UsersAPIComponent","pageNumber","getUsers","setCurrentPage","isFetching","Preloader","follow","unfollow","toggleIsFollowing","compose","usersPage"],"mappings":"8MAIaA,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAA0B,IAAtBC,KAAKC,MAAMC,OAAyB,kBAAC,IAAD,CAAUC,GAAI,WAC/C,kBAACL,EAAcE,KAAKC,WAJQ,GACXG,IAAMN,WAYtC,OAFuCO,aAJN,SAACC,GAAD,MAAY,CACzCJ,OAAQI,EAAMC,KAAKL,UAGgBG,CAAqCN,K,oBCfhFS,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,KAAO,oBAAoB,aAAe,4BAA4B,cAAgB,+B,gJCkDxHC,EA9CH,SAACT,GAKT,IAHA,IAAIU,EAAaC,KAAKC,KAAKZ,EAAMa,gBAAkBb,EAAMc,UAErDC,EAAQ,GACHC,EAAI,EAAGA,GAAKN,EAAYM,IAC7BD,EAAME,KAAKD,GAGf,OAAO,6BACH,6BACKD,EAAMG,KAAI,SAAAC,GACP,OAAO,0BAAMC,UAAWpB,EAAMqB,cAAgBF,GAAKG,IAAEC,aACjDC,QAAS,WAAQxB,EAAMyB,cAAcN,KAAOA,EADzC,SAKXnB,EAAM0B,MAAMR,KAAI,SAAAS,GAAC,OAAI,yBAAKC,IAAKD,EAAEE,IAC7B,8BACI,6BACI,kBAAC,IAAD,CAAS3B,GAAI,YAAcyB,EAAEE,IACzB,yBAAKT,UAAWE,IAAEQ,OAAQC,IAAuB,MAAlBJ,EAAEK,OAAOC,MAAgBN,EAAEK,OAAOC,MAAQC,SAIrF,8BACI,yBAAKd,UAAWE,IAAEa,eACbR,EAAES,SACG,4BAAQC,SAAUrC,EAAMsC,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOF,EAAEE,MAAKL,QAAS,WAAQxB,EAAMwC,eAAeb,EAAEE,MAA7G,YACA,4BAAQQ,SAAUrC,EAAMsC,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOF,EAAEE,MAAKL,QAAS,WAAQxB,EAAMyC,aAAad,EAAEE,MAA3G,YAGd,8BACI,8BACI,6BAAMF,EAAEe,KAAK,8BAAYf,EAAEgB,SAE/B,sC,QCVLC,E,4MAtBXnB,cAAgB,SAACoB,GACb,EAAK7C,MAAM8C,SAASD,EAAY,EAAK7C,MAAMc,W,kEAJ3Cf,KAAKC,MAAM8C,SAAS/C,KAAKC,MAAM+C,eAAgBhD,KAAKC,MAAMc,Y,+BAQ1D,OAAO,oCACFf,KAAKC,MAAMgD,WAAa,kBAACC,EAAA,EAAD,MAAgB,KACzC,kBAAC,EAAD,iBAAWlD,KAAKC,MAAhB,CACIa,gBAAiBd,KAAKC,MAAMa,gBAC5BC,SAAUf,KAAKC,MAAMc,SACrBO,YAAatB,KAAKC,MAAMqB,YACxBI,cAAe1B,KAAK0B,cACpBC,MAAO3B,KAAKC,MAAM0B,MAClBwB,OAAQnD,KAAKC,MAAMkD,OACnBC,SAAUpD,KAAKC,MAAMmD,SACrBC,kBAAmBrD,KAAKC,MAAMoD,kBAC9Bd,oBAAqBvC,KAAKC,MAAMsC,4B,GArBhBnC,IAAMN,W,yBC0BvBwD,sBACXzD,IACAQ,aA1BkB,SAACC,GACnB,MAAO,CACHqB,MAAOrB,EAAMiD,UAAU5B,MACvBZ,SAAUT,EAAMiD,UAAUxC,SAC1BD,gBAAiBR,EAAMiD,UAAUzC,gBACjCQ,YAAahB,EAAMiD,UAAUjC,YAC7B2B,WAAY3C,EAAMiD,UAAUN,WAC5BV,oBAAqBjC,EAAMiD,UAAUhB,oBACrCrC,OAAQI,EAAMC,KAAKL,UAmBnB,CAAEwC,iBAAcD,mBAAgBO,mBAAgBK,sBAAmBN,eAH5DO,CAIbT","file":"static/js/5.78b6981b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n      })\r\n      \r\n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__6vUt-\",\"wrap\":\"Users_wrap__3Elra\",\"selectedPage\":\"Users_selectedPage__2xmf1\",\"subscriptions\":\"Users_subscriptions__8rOaH\"};","import React from 'react'\r\nimport s from \"./Users.module.css\"\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    \r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && s.selectedPage}\r\n                    onClick={() => { props.onPageChanged(p) }}>{p} </span>\r\n        })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}  >\r\n                            <img className={s.avatar} src={u.photos.small != null ? u.photos.small : userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div className={s.subscriptions}>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => { props.unfollowSucces(u.id) }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => { props.followSucces(u.id) }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}<div></div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        {/* <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div> */}\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users ","import React from \"react\"\r\nimport Users from \"./Users\"\r\nimport Preloader from \"../Common/Preloader/Preloader\"\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.setCurrentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users {...this.props}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleIsFollowing={this.props.toggleIsFollowing}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport default UsersAPIComponent;","import { connect } from \"react-redux\";\r\nimport UsersAPIComponent from \"./UsersAPIComponent\";\r\nimport { followSucces, unfollowSucces, getUsers, setCurrentPage, toggleIsFollowing, rqUsers, setUsers, setUsersTotalCount, toggleIsFetching } from \"../../redux/users_reducer\"\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: getUsers(state),\r\n//         pageSize: getPageSize(state),\r\n//         totalUsersCount: getTotalUsersCount(state),\r\n//         currentPage: getCurrentPage(state),\r\n//         isFetching: getIsFetching(state),\r\n//         followingInProgress: getFollowingInProgress(state),\r\n//         isAuth: getIsAuth(state),\r\n//     }\r\n// }\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        { followSucces, unfollowSucces, setCurrentPage, toggleIsFollowing, getUsers })\r\n)(UsersAPIComponent)"],"sourceRoot":""}