{"version":3,"sources":["api/api.js","redux/messages_reducer.js","redux/users_reducer.js","components/Users/SVG/Cube.svg","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","redux/auth_reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app_reducer.js","App.js","serviceWorker.js","redux/sidebar_reducer.js","redux/redux-store.js","index.js","components/Common/FormsController/FormsController.jsx","utils/validators/index.js","components/Common/FormsController/FormsController.module.css","components/Header/Header.module.css","components/Login/Login.module.css","components/Common/Preloader/Preloader.jsx","redux/profile_reducer.js"],"names":["instance","Axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","responce","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","messagues","id","message","dialogs","name","sendMessagueCreator","newMessagueBody","type","messagesReducer","state","action","body","users","totalUsersCount","isFetching","followingInProgress","newPostText","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleIsFollowing","dispatch","a","items","count","totalCount","userReducer","map","u","followed","filter","module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","Header","header","src","loginBlock","isAuth","onClick","captchaUrl","setUserData","payload","getCaptchaUrlSuccess","getUserData","response","resultCode","url","authReducer","HeaderContainer","this","React","Component","compose","connect","auth","maxLengthCreator50","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","createField","formSummeryError","messages","length","stopSubmit","_error","gapForm","initialized","appReducer","DialoguesContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","basename","process","Suspense","fallback","path","render","Preloader","withRouter","app","promise","Promise","all","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sideBar","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","hasError","touched","styles","formControl","validators","text","value","maxLength","Cube","posts","likesCount","addPostActionCreator","setUserProfile","setStatus","getUserProfile","file","photos","getState","reject","newPost"],"mappings":"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","file":"static/js/main.17ac15f3.chunk.js","sourcesContent":["import * as Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"94628c20-c330-4c24-82e5-5b09aa1c5b50\"\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(responce => {\r\n            return responce.data\r\n        })\r\n}\r\n\r\n\r\n","const SEND_MESSAGUE = 'SEND_MESSAGUE';\r\n\r\nlet initialState = {\r\n    messagues: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Let me ask u smthing...'},\r\n        {id: 3, message: 'Tomorrow morning'},\r\n        {id: 4, message: 'I forgot about it...'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Andrew'},\r\n        {id: 2, name: 'Yulia'},\r\n        {id: 3, name: 'Volodimir'},\r\n        {id: 4, name: 'Evgen'},\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGUE: {\r\n            let body = action.newMessagueBody;\r\n            return {\r\n                ...state,\r\n                messagues: [...state.messagues, {id: 5, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessagueCreator = (newMessagueBody) => ({type: SEND_MESSAGUE, newMessagueBody})\r\n\r\nexport default messagesReducer;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    newPostText: '',\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSucces = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSucces = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleIsFollowing = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING, isFetching, userId })\r\n\r\nexport const getUsers = (setCurrentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(setCurrentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowing(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSucces)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces)\r\n    }\r\n}\r\n\r\nexport default userReducer;","module.exports = __webpack_public_path__ + \"static/media/Cube.99ddbf4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1AXFp\",\"item\":\"Navbar_item__qmwX5\",\"activeLink\":\"Navbar_activeLink__1iK9i\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item} >\r\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/dialogues' activeClassName={s.activeLink}>Dialogues</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item} >\r\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            HOT NEWS!!!\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Sing song and dance\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Deep Settings\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Settings;","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <NavLink to={'/profile'}> <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Inkscape.logo.svg/390px-Inkscape.logo.svg.png' /> </NavLink>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'user/auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'user/auth/GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\nexport const getUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data\r\n            dispatch(setUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        const response = await securityAPI.getCaptchaUrl()\r\n        const captchaUrl = response.data.url\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth_reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { logout })\r\n)(HeaderContainer)","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {reduxForm, Field,} from 'redux-form';\r\nimport {required, maxLengthCreator} from \"../../utils/validators\";\r\nimport {Input, createField} from \"../Common/FormsController/FormsController\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input}\r\n                       validate={[required, maxLengthCreator50]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'password'} placeholder={'Password'} name={'password'} component={Input}\r\n                       validate={[required, maxLengthCreator50]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}/> Save\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\r\n            <div>\r\n                {error && <div className={s.formSummeryError}>\r\n                    Incorrect email or password\r\n                </div>}\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.gapForm}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getUserData} from \"./auth_reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initialized = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getUserData())\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initialized())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app_reducer';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\n\r\nconst DialoguesContainer = React.lazy(() => import('./components/Dialogues/DialoguesContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'))\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <React.Suspense fallback={<h1>Loading...</h1>}>\r\n                            <Route path='/dialogues' render={() => < DialoguesContainer/>}/>\r\n                            <Route path='/profile/:userId?' render={() => < ProfileContainer/>}/>\r\n                            <Route path='/login' render={() => < Login/>}/>\r\n                            <Route path='/news' render={() => < News/>}/>\r\n                            <Route path='/music' render={() => < Music/>}/>\r\n                            <Route path='/settings' render={() => < Settings/>}/>\r\n                            <Route path='/users' render={() => < UsersContainer/>}/>\r\n                        </React.Suspense>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport messagesReducer from \"./messages_reducer\";\r\nimport sidebarReducer from \"./sidebar_reducer\";\r\nimport userReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport styles from './FormsController.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={hasError && styles.formControl}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span className={styles.error}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={hasError && styles.formControl}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validators={validators} component={component} {...props} /> {text}\r\n    </div>\r\n)\r\n","export const required = (value) => {\r\n    if (value) { return undefined }\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsController_formControl__sUpk-\",\"error\":\"FormsController_error__3VLbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__i0-0Q\",\"loginBlock\":\"Header_loginBlock__PpZ5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gapForm\":\"Login_gapForm__3ZPBg\",\"formSummeryError\":\"Login_formSummeryError__2lvTJ\"};","import React from \"react\"\r\nimport Cube from '../../Users/SVG/Cube.svg'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={Cube} />\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Preloader;","import {usersAPI, profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCES = 'SAVE_PHOTO_SUCCES'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, my name is...', likesCount: 12},\r\n        {id: 2, message: 'Hello', likesCount: 22},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 1,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, (newPost)],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCES: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos},\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSucces = (photos) => ({type: SAVE_PHOTO_SUCCES, photos})\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n}\r\nexport const savePhoto = (file) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSucces(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\nexport const saveProfile = (profile) => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.userId\r\n        let response = await profileAPI.saveProfile(profile)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\r\n            return Promise.reject(response.data.messages[0])\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}